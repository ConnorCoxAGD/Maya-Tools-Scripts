{
proc float AddNums(float $nums[])
{
	float $sum = 0;
	for($i = 0; $i < (size($nums)); $i++)
	{
		$sum += $nums[$i];
	}
	print($sum);
	return($sum);
}
AddNums({2,3,5});
}

{
proc float SubNums(float $nums[])
{
	float $firstNum = $nums[0];
	for($i = 1; $i < (size($nums)); $i++)
	{
		$firstNum -= $nums[$i];
	}
	float $dif = $firstNum;
	print($dif);
	return($dif);
}
SubNums({8,2,1});
}

{
proc float MultiNums(float $nums[])
{

	float $prod = 1;
	for($i = 0; $i < (size($nums)); $i++)
	{
		$prod *= $nums[$i];
	}
	
	print ($prod);
	return ($prod);
}
MultiNums({5, 6, 2});
}


{
proc float DivNums(float $nums[])
{
	float $firstNum = $nums[0];
	for($i = 1; $i < (size($nums)); $i++)
	{
		$firstNum -= $nums[$i];
	}
	float $quo = $firstNum;
	print($quo);
	return($quo);
}
DivNums({60, 2, 6})
}

{
proc float PowerNums(float $baseNum, float $exp)
{
	float $power = $baseNum;
	for($i = 0; $i< ($exp -1); $i++)
	{
		$power = $power * $baseNum;
	}
	print($power);
	return ($power);
}
PowerNums(2,3);
}

{
proc float Mean(float $nums[])
{
	float $sum = 0;
	for($i = 0; $i< (size($nums)); $i++)
	{
		$sum += $nums[$i];
	}
	$mean = $sum / (size($nums));
	print($mean);
	return ($mean);
}
Mean({2,5,6,4,7,9});
}

{
proc float Median(float $nums[])
{
	float $median;
	float $list = (size($nums))+1;
	if($list %2 != 0)
	{
		int $lesser = floor($list/2)-1;
		int $greater = ceil($list/2)-1;
		float $total = $nums[$lesser]+$nums[$greater];
		$median = $total/2;
	}
	if($list %2 == 0)
	{
		int $middle = ($list/2)-1;
		$median = $nums[$middle];
	}
	
	print($median);
	return ($median);
}
Median({2,4,5,7,8,10,13,14});
}

{
proc float[] Mode(float $nums[])
{
	float $sortedNums[] = `sort $nums`;
	float $thisNum = $sortedNums[0];
	
	float $mode[] = {0};
	
	int $frequency;
	int $mostFrequent;
	
		for($i = 0; $i < size($sortedNums); $i++)
		{
			if($sortedNums[$i] == $thisNum)
				$frequency++;
			else
			{
				if($frequency > $mostFrequent)
				{
					$mostFrequent = $frequency;
					$mode[0] = $thisNum;
				}
				$frequency = 1;
				$thisNum = $sortedNums[$i];
			}
		}
	
	return ($mode);
}
}




